FROM golang:1.16.2 AS golang

FROM nvidia/cuda:11.1-cudnn8-devel-ubuntu18.04 AS prepare-amd64

FROM ubuntu:18.04 AS prepare-arm64
RUN mkdir -p /usr/local/cuda

FROM prepare-${TARGETARCH} as base

ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update && apt-get install -y --no-install-recommends \
		g++ \
		git \
		gcc \
		curl \
		ca-certificates \
		libc6-dev \
		make \
		pkg-config \
	&& rm -rf /var/lib/apt/lists/*

COPY --from=golang /usr/local/go /usr/local/go
ENV PATH /usr/local/go/bin:$PATH

ENV GOPATH /go
ENV PATH $GOPATH/bin:$PATH
RUN mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"

WORKDIR $GOPATH

FROM base as prepare

ARG VERSION="0.25.0"
RUN git clone --depth 1 -b v${VERSION} https://github.com/hybridgroup/gocv /go/src/gocv.io/x/gocv
WORKDIR /go/src/gocv.io/x/gocv

ARG TARGETARCH
RUN set -eux; \
    \
    apt-get update; \
    apt-get install sudo -y; \
    \
    case ${TARGETARCH} in \
        amd64) make install_cuda ;; \
        arm64) make install ;; \
        *) exit 1 ;; \
    esac; \
    \
    make install_cuda; \
    \
    rm -rf /var/lib/apt/lists/*

FROM base

# ldconfig cache
COPY --from=prepare /etc/ld.so.* /etc/

# lib
COPY --from=prepare /lib /lib
COPY --from=prepare /usr/lib /usr/lib
COPY --from=prepare /usr/local/lib /usr/local/lib

# lib *.h
# required for build, no need for runtime
COPY --from=prepare /usr/include /usr/include
COPY --from=prepare /usr/local/include /usr/local/include

# cuda
COPY --from=prepare /usr/local/cuda /usr/local/cuda

COPY --from=prepare /go/src/gocv.io/x/gocv /go/src/gocv.io/x/gocv

RUN cd /go/src/gocv.io/x/gocv && go build -o /go/bin/gocvversion ./cmd/version/main.go && /go/bin/gocvversion

# runtime
# FROM ghcr.io/querycap/distroless/cc-debian10:latest
#
# COPY --from=onbuild /etc/ld.so.* /etc/
#
# COPY --from=onbuild /lib /lib
# COPY --from=onbuild /usr/lib /usr/lib
# COPY --from=onbuild /usr/local/lib /usr/local/lib
#
# COPY --from=onbuild /go/bin/gocvversion /go/bin/gocvversion
#
# ENTRYPOINT ["/go/bin/gocvversion"]
